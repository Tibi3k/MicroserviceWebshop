apiVersion: apps/v1
kind: Deployment
metadata:
  # annotations:
  #   kompose.cmd: kompose convert
  #   kompose.version: 1.26.1 (a9d05d509)
  #   traefik.enable: "true"
  #   traefik.http.middlewares.product-auth.forwardauth.address: http://host.docker.internal:6200/auth
  #   traefik.http.middlewares.product-auth.forwardauth.authResponseHeaders: Email, UserId, UserName, jobTitle
  #   traefik.http.routers.product-service-free.entrypoints: web
  #   traefik.http.routers.product-service-free.rule: Host(`localhost`) && Path(`/api/products/public{any11:.*}`, `/api/categories/get{any12:.*}`)
  #   traefik.http.routers.product-service.entrypoints: web
  #   traefik.http.routers.product-service.middlewares: ' product-auth@docker'
  #   traefik.http.routers.product-service.rule: Host(`localhost`) && Path(`/api/products/protected{any:.*}`, `/api/categories/create{any2:.*}`)
  #   traefik.port: "80"
  # creationTimestamp: null
  labels:
    io.kompose.service: product-service
  name: product-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: product-service
  strategy: {}
  template:
    metadata:
      # annotations:
      #   kompose.cmd: kompose convert
      #   kompose.version: 1.26.1 (a9d05d509)
      #   traefik.enable: "true"
      #   traefik.http.middlewares.product-auth.forwardauth.address: http://host.docker.internal:6200/auth
      #   traefik.http.middlewares.product-auth.forwardauth.authResponseHeaders: Email, UserId, UserName, jobTitle
      #   traefik.http.routers.product-service-free.entrypoints: web
      #   traefik.http.routers.product-service-free.rule: Host(`localhost`) && Path(`/api/products/public{any11:.*}`, `/api/categories/get{any12:.*}`)
      #   traefik.http.routers.product-service.entrypoints: web
      #   traefik.http.routers.product-service.middlewares: ' product-auth@docker'
      #   traefik.http.routers.product-service.rule: Host(`localhost`) && Path(`/api/products/protected{any:.*}`, `/api/categories/create{any2:.*}`)
      #   traefik.port: "80"
      # creationTimestamp: null
      labels:
        # io.kompose.network/products-net: "true"
        # io.kompose.network/rabbitMQnet: "true"
        # io.kompose.network/traefik-net: "true"
        io.kompose.service: product-service
    spec:
      containers:
        - env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: DBHOST
              value: mssql
          image: mswebshopregistry.azurecr.io/product-service:latest
          name: product-service
          resources: {}
      hostname: product-service
      restartPolicy: Always
