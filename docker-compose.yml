version: '3.9'

volumes:
  datafiles:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  mongod:
   

networks:
  products-net:
    external: false
  kong-net:
  rabbitMQnet:
    external: false
  basket-net:
    external: false


services:
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports: 
    - "2666:1433"
    volumes:
      - datafiles:/var/lib/mysql
    restart: always
    environment:
      - ACCEPT_EULA="Y"
      - SA_PASSWORD=Asdf1234
    networks:
      - products-net
  api:
    hostname: ProductService
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    depends_on:
      - mssql
    ports:
      - "7200:80"
    restart: always
    environment:
      - DBHOST=mssql
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - products-net
      - rabbitMQnet

  basket-service:
    build:
      context: .
      dockerfile: BasketService/Dockerfile
    depends_on: 
      - mongoDB
    restart: always
    ports:
      - "7300:80"
    networks:
      - basket-net
      - rabbitMQnet

  mongoDB:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: basketDB
    networks:
      - basket-net
    volumes:
      - mongod

  kong-bootstrap:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_DATABASE: "kong"
      KONG_PG_USER: "kong"
      KONG_PG_PASSWORD: "kong"
    command: "kong migrations bootstrap"
    restart: 'on-failure'
    depends_on:
      - postgres
    networks:
      - kong-net

  #kong-deck:
  #  image: "kong/deck:latest"
  #  hostname: kong-deck
  #  container_name: kong-deck
  #  environment:
  #    DECK_KONG-ADDR: "http://kong:8001"
  #  command: "ping"
  #  restart: 'always'
  #  depends_on:
  #    - kong
  #  networks:
  #    - kong-net

  postgres:
    image: postgres:9.6-alpine
    restart: always
    hostname: kong-database
    container_name: kong-database
    environment:
      POSTGRES_USER: "kong"
      POSTGRES_DB: "kong"
      POSTGRES_PASSWORD: "kong"
    ports:
      - "5432:5432" 
    networks:
      - kong-net
  
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    restart: always
    hostname: kong
    container_name: kong
    depends_on:
      - kong-bootstrap
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "kong-database"
      KONG_PG_DATABASE: "kong"
      KONG_PG_USER: "kong"
      KONG_PG_PASSWORD: "kong"
      KONG_PROXY_ACCESS_LOG: '/dev/stdout'
      KONG_ADMIN_ACCESS_LOG: '/dev/stdout'
      KONG_PROXY_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    command: "kong start"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - kong-net

  RabbitMQ:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    ports:
    - "4369:4369"
    - "5671:5671"
    - "5672:5672"
    - "25672:25672"
    - "15671:15671"
    - "15672:15672"
    networks:
      - rabbitMQnet

secrets:
  kong_postgres_password:
    file: ./config/POSTGRES_PASSWORD

