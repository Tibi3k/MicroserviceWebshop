version: '3'

volumes:
  datafiles:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  mongod:
    driver: local
  postgres_data:
    driver: local
   

networks:
  products-net:
    external: false
  rabbitMQnet:
    external: false
  basket-net:
    external: false
  traefik-net:
    external: false


services:
  order-service:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    restart: unless-stopped
    networks:
      #- products-net
      - rabbitMQnet
      - traefik-net
      - basket-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.order-service.rule=Host(`localhost`) && Path(`/api/orders{any:.*}`)"
      - "traefik.http.routers.order-service.entrypoints=web"
      - "traefik.port=80"
      - "traefik.http.middlewares.order-auth.forwardauth.address=http://host.docker.internal:6200/auth"
      - "traefik.http.middlewares.order-auth.forwardauth.authResponseHeaders=Email, UserId, UserName, jobTitle"
      - "traefik.http.routers.order-service.middlewares=order-auth@docker"
    depends_on:
      - RabbitMQ
      - mongoDB

  payment-service:
    build:
      context: .
      dockerfile: PaymentService/Dockerfile
    restart: unless-stopped
    networks:
      #- products-net
      - rabbitMQnet
      - traefik-net
      - basket-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.payment-service.rule=Host(`localhost`) && Path(`/api/payment{any:.*}`)"
      - "traefik.http.routers.payment-service.entrypoints=web"
      - "traefik.port=80"
      - "traefik.http.middlewares.payment-auth.forwardauth.address=http://host.docker.internal:6200/auth"
      - "traefik.http.middlewares.payment-auth.forwardauth.authResponseHeaders=Email, UserId, UserName, jobTitle"
      - "traefik.http.routers.payment-service.middlewares=payment-auth@docker"
    depends_on:
      - RabbitMQ
      - mongoDB

  auth-service:
    build:
      context: .
      dockerfile: NodeAuthService/Dockerfile
    restart: unless-stopped
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=Host(`localhost`) && Path(`/auth{any:.*}`)"
      - "traefik.http.routers.auth-service.entrypoints=web"
      - "traefik.port=6200"
  nginx:
    container_name: AngularNginx
    build: 
      context: .
      dockerfile: MicroserviceFrontend/Dockerfile
    restart: unless-stopped
    networks: 
      #- products-net
      #- rabbitMQnet
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`localhost`) && Path(`/`, `/{jscss:.*(.css|.js)}`, `/basket`, `/orders`, `/createproduct`, `/createcategory`, `/edit{edit:.*}`)"
      - "traefik.http.routers.nginx.entrypoints=web"
      - "traefik.port=80"
      - "traefik.http.middlewares.nginxheaders.headers.accesscontrolalloworiginlist=http://localhost:80" 
      - "traefik.http.routers.nginx.middlewares=nginxheaders"
  email-service:
    hostname: EmailService
    container_name: EmailService
    build:
      context: .
      dockerfile: EmailService/Dockerfile
    restart: unless-stopped
    networks:
      - rabbitMQnet
    depends_on:
      - RabbitMQ
  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports: 
    - "2666:1433"
    volumes:
      - datafiles:/var/lib/mysql
    environment:
      - ACCEPT_EULA="Y"
      - SA_PASSWORD=Asdf1234
    networks:
      - products-net
  product-service:
    hostname: ProductService
    build:
      context: .
      dockerfile: ProductService/Dockerfile
    depends_on:
      - mssql
      - RabbitMQ
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.product-service-free.rule=Host(`localhost`) && Path(`/api/products/public{any11:.*}`, `/api/categories/get{any12:.*}`)"
      - "traefik.http.routers.product-service-free.entrypoints=web"
      - "traefik.http.routers.product-service.rule=Host(`localhost`) && Path(`/api/products/protected{any:.*}`, `/api/categories/create{any2:.*}`)"
      - "traefik.http.routers.product-service.entrypoints=web"
      - "traefik.port=80"
      - "traefik.http.middlewares.product-auth.forwardauth.address=http://host.docker.internal:6200/auth"
      - "traefik.http.middlewares.product-auth.forwardauth.authResponseHeaders=Email, UserId, UserName, jobTitle"
      - "traefik.http.routers.product-service.middlewares= product-auth@docker"

    environment:
      - DBHOST=mssql
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - products-net
      - rabbitMQnet
      - traefik-net

  basket-service:
    hostname: BasketService
    build:
      context: .
      dockerfile: BasketService/Dockerfile
    depends_on: 
      - mongoDB
      - RabbitMQ
    restart: unless-stopped
    networks:
      - basket-net
      - rabbitMQnet
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.basket-service.rule=Host(`localhost`) && Path(`/api/basket{any:.*}`)"
      - "traefik.http.routers.basket-service.entrypoints=web"
      - "traefik.port=80"
      - "traefik.http.middlewares.basketAuth.forwardauth.address=http://host.docker.internal:6200/auth"
      - "traefik.http.middlewares.basketAuth.forwardauth.authResponseHeaders=Email, UserId, UserName, jobTitle"
      - "traefik.http.routers.basket-service.middlewares= basketAuth@docker"
  mongoDB:
    image: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: basketDB
    networks:
      - basket-net

  traefik-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    container_name: traefik
    restart: unless-stopped
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yml:/traefik.yml:ro
      - ./config/acme:/acme
    networks:
      - traefik-net
      - products-net
      - basket-net
      - rabbitMQnet
    labels:
      kompose.service.type: LoadBalancer

  RabbitMQ:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    ports:
    - "4369:4369"
    - "5671:5671"
    - "5672:5672"
    - "25672:25672"
    - "15671:15671"
    - "15672:15672"
    networks:
      - rabbitMQnet


